{"ast":null,"code":"var _jsxFileName = \"/home/sarika/Downloads/src (1)/src/App.js\";\n// import Header from '../src/Header';\n// import Content from '../src/Content';\n// import Slider from 'rc-slider';\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import { Route } from 'react-router';\n// import { Route,  BrowserRouter as Router } from 'react-router-dom';\n// import { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\n// var ReactCSSTransitionGroup = require('react-addons-css-transition-group');\n// import './App.css';\n// import 'rc-slider/assets/index.css';\n// const Range = Slider.Range;\n// const style = { width: 400, margin: 50 };\n// function App() {\n// var i = 1;\n// var myStyle = {\n//   fontSize: 100,\n//   color: '#FF0000',\n// }\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.renderSquare = value => {\n      // this.state.data =this.state.value;\n      this.setState({\n        value: value\n      });\n      console.log(\"value\", this.state.value);\n\n      for (var i = 0; i < 9; i++) {\n        this.setState({\n          data: this.state.value\n        });\n      }\n\n      console.log(\"data\", this.state.data); // return <square value={i} />;\n    };\n\n    this.onChangeValue = e => {\n      this.setState({\n        value: e.target.value\n      }); // this.setState({data: e.target.value});\n    };\n\n    this.state = {\n      data: [],\n      value: ''\n    };\n    this.onChangeValue = this.onChangeValue.bind(this);\n  } // constructor() {\n  //   super();\n  //   this.state = {\n  //     data:\n  //       [\n  //         {\n  //           \"id\": 1,\n  //           \"name\": \"Foo\",\n  //           \"age\": \"20\"\n  //         },\n  //         {\n  //           \"id\": 2,\n  //           \"name\": \"Bar\",\n  //           \"age\": \"30\"\n  //         },\n  //         {\n  //           \"id\": 3,\n  //           \"name\": \"Baz\",\n  //           \"age\": \"40\"\n  //         }\n  //       ]\n  //   }\n  // }\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     header: \"Header from state...\",\n  //     content: \"Content from state...\"\n  //   }\n  // }\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     data: []\n  //   }\n  //   this.setStateHandler = this.setStateHandler.bind(this);\n  // };\n  // setStateHandler() {\n  //   var item = \"setState...\"\n  //   var myArray = this.state.data.slice();\n  //   myArray.push(item);\n  //   this.setState({ data: myArray })\n  // }\n  // constructor() {\n  //   super();\n  //   this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\n  // };\n  // forceUpdateHandler() {\n  //   this.forceUpdate();\n  // };\n  // constructor() {\n  //   super();\n  //   this.findDomNodeHandler = this.findDomNodeHandler.bind(this);\n  // };\n  // findDomNodeHandler() {\n  //   var myDiv = document.getElementById('myDiv');\n  //   ReactDOM.findDOMNode(myDiv).style.color = 'green';\n  // }\n  //   constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //        data: 0\n  //     }\n  //     this.setNewNumber = this.setNewNumber.bind(this)\n  //     this.setNewNumber1= this.setNewNumber1.bind(this)\n  //  };\n  //  setNewNumber() {\n  //     this.setState({data: this.state.data + 1})\n  //  }\n  // setNewNumber1(){\n  //   this.setState({data : this.state.data - 1})\n  // }\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     data: 'Initial data...'\n  //   }\n  //   this.updateState = this.updateState.bind(this);\n  // };\n  // updateState(e) {\n  //   this.setState({ data: e.target.value });\n  // }\n  //   constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //        data: 'Initial data...'\n  //     }\n  //     this.updateState = this.updateState.bind(this);\n  //  };\n  //  updateState(e) {\n  //     this.setState({data: e.target.value});\n  //   }\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     data: 'Initial data...'\n  //   }\n  //   this.updateState = this.updateState.bind(this);\n  // };\n  // updateState() {\n  //   this.setState({ data: 'Data updated...' })\n  // }\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     data: 'Initial data...'\n  //   }\n  //   this.updateState = this.updateState.bind(this);\n  // };\n  // updateState() {\n  //   this.setState({ data: 'Data updated from the child component...' })\n  // }\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     data: 'Initial data...'\n  //   }\n  //   this.updateState = this.updateState.bind(this);\n  // };\n  // updateState() {\n  //   this.setState({ data: 'Data updated...' })\n  // }\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     data: 'Initial data...'\n  //   }\n  //   this.updateState = this.updateState.bind(this);\n  // };\n  // updateState() {\n  //   this.setState({ data: 'Data updated from the child component...' })\n  // }\n  //   constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //        data: ''\n  //     }\n  //     this.updateState = this.updateState.bind(this);\n  //     this.clearInput = this.clearInput.bind(this);\n  //  };\n  //  updateState(e) {\n  //     this.setState({data: e.target.value});\n  //  }\n  //  clearInput() {\n  //     this.setState({data: ''});\n  //     ReactDOM.findDOMNode(this.refs.myInput).focus();\n  //  }\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //      data:[\n  //         {\n  //            component: 'First...',\n  //            id: 1\n  //         },\n  //         {\n  //            component: 'Second...',\n  //            id: 2\n  //         },\n  //         {\n  //            component: 'Third...',\n  //            id: 3\n  //         }\n  //      ]\n  //   }\n  // }\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     lowerBound: 20,\n  //     upperBound: 40,\n  //     value: [20, 40],\n  //   };\n  // }\n  // onLowerBoundChange = (e) => {\n  //   this.setState({ lowerBound: +e.target.value });\n  // }\n  // onUpperBoundChange = (e) => {\n  //   this.setState({ upperBound: +e.target.value });\n  // }\n  // onSliderChange = (value) => {\n  //   console.log(value);\n  //   this.setState({\n  //     value,\n  //   });\n  // }\n  // handleApply = () => {\n  //   const { lowerBound, upperBound } = this.state;\n  //   this.setState({ value: [lowerBound, upperBound] });\n  // }\n\n\n  render() {\n    console.log(\"data\", this.state.data);\n    return (// <div className=\"App\">\n      //   <header className=\"App-header\">\n      //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      //     <p>\n      //       Edit <code>src/App.js</code> and save to reload.\n      //     </p>\n      //     <a\n      //       className=\"App-link\"\n      //       href=\"https://reactjs.org\"\n      //       target=\"_blank\"\n      //       rel=\"noopener noreferrer\"\n      //     >\n      //       Learn React\n      //     </a>\n      //   </header>\n      // </div>\n      //     <div>\n      //     Hello World!!!\n      //  </div>\n      // <div>\n      //   <h1>Header</h1>\n      //   <h2>Content</h2>\n      //   <p>This is the content!!!</p>\n      // </div>\n      // <div>\n      //   <h1>Header</h1>\n      //   <h2>Content</h2>\n      //   <p data-myattribute=\"somevalue\">This is the content!!!</p>\n      // </div>\n      // <div>\n      //   <h1>{1 + 1}</h1>\n      // </div>\n      //     <div>\n      //     <h1>{i == 4 ? 'True!' : 'False'}</h1>\n      //  </div>\n      // <div>\n      //   <h1 style={myStyle}>Header</h1>\n      // </div>\n      //   <div>\n      //           <h1>Header</h1>\n      //    {/* {//end of command}       */}\n      // </div>\n      //   <div>\n      //   <Header/>\n      //   <Content/>\n      // </div>\n      //     <div>\n      //     <Header/>\n      //     <table>\n      //        <tbody>\n      //           {this.state.data.map((person, i) => <TableRow key = {i} \n      //              data = {person} />)}\n      //        </tbody>\n      //     </table>\n      //  </div>\n      // {/* <div>\n      // <h1>{this.state.header}</h1>\n      // <h2>{this.state.content}</h2>\n      // </div> */}\n      // {/* <div>\n      //             <h1>{this.props.headerProp}</h1>\n      //             <h2>{this.props.contentProp}</h2>\n      //          </div> */}\n      // <div>\n      //   <Header headerProp={this.state.header} />\n      //   <Content contentProp={this.state.content} />\n      // </div>\n      // <div>\n      //       <h3>Array: {this.props.propArray}</h3>\n      //       <h3>Bool: {this.props.propBool ? \"True...\" : \"False...\"}</h3>\n      //       <h3>Func: {this.props.propFunc(3)}</h3>\n      //       <h3>Number: {this.props.propNumber}</h3>\n      //       <h3>String: {this.props.propString}</h3>\n      //       <h3>Object: {this.props.propObject.objectName1}</h3>\n      //       <h3>Object: {this.props.propObject.objectName2}</h3>\n      //       <h3>Object: {this.props.propObject.objectName3}</h3>\n      //    </div>\n      // <div>\n      //   <button onClick={this.setStateHandler}>SET STATE</button>\n      //   <h4>State Array: {this.state.data}</h4>\n      // </div>\n      // <div>\n      //   <button onClick={this.forceUpdateHandler}>FORCE UPDATE</button>\n      //   <h4>Random number: {Math.random()}</h4>\n      // </div>\n      // <div>\n      //   <button onClick={this.findDomNodeHandler}>FIND DOME NODE</button>\n      //   <div id=\"myDiv\">NODE</div>\n      // </div>\n      //     <div>\n      //     <button onClick = {this.setNewNumber}>INCREMENT</button>\n      //     <Content myNumber = {this.state.data}></Content>\n      //     <button onClick ={this.setNewNumber1}>DECRMENT</button>\n      //     <Header myNumber1 ={this.state.data}></Header>\n      //  </div>\n      // <div>\n      //   <input type=\"text\" value={this.state.data}\n      //     onChange={this.updateState} style={{margin:'10px 0px 0px 10px'}}/>\n      //   <h4 style={{color:'red',margin:'10px 0px 0px 10px'}}>{this.state.data}</h4>\n      // </div>\n      // <div>\n      //       <Content myDataProp = {this.state.data} \n      //          updateStateProp = {this.updateState}></Content>\n      //    </div>\n      // <div>\n      //   <button onClick={this.updateState}>CLICK</button>\n      //   <h4>{this.state.data}</h4>\n      // </div>\n      // <div>\n      //   <Content myDataProp={this.state.data}\n      //     updateStateProp={this.updateState}></Content>\n      // </div>\n      // <div>\n      //   <button onClick={this.updateState}>CLICK</button>\n      //   <h4>{this.state.data}</h4>\n      // </div>\n      // <div>\n      //   <Content myDataProp={this.state.data}\n      //     updateStateProp={this.updateState}></Content>\n      // </div>\n      // <div>\n      //       <input value = {this.state.data} onChange = {this.updateState} \n      //          ref = \"myInput\"></input>\n      //       <button onClick = {this.clearInput}>CLEAR</button>\n      //       <h4>{this.state.data}</h4>\n      //    </div>\n      //     <div>\n      //     <div>\n      //        {this.state.data.map((dynamicComponent, i) => <Content \n      //           key = {i} componentData = {dynamicComponent}/>)}\n      //     </div>\n      //  </div>\n      // <div>\n      //   <label>LowerBound: </label>\n      //   <input type=\"number\" value={this.state.lowerBound} onChange={this.onLowerBoundChange} />\n      //   <br />\n      //   <label>UpperBound: </label>\n      //   <input type=\"number\" value={this.state.upperBound} onChange={this.onUpperBoundChange} />\n      //   <br />\n      //   <button onClick={this.handleApply}>Apply</button>\n      //   <br /><br />\n      //   <Range allowCross={false} value={this.state.value} onChange={this.onSliderChange} />\n      // </div>\n      //Routing\n      // <BrowserRouter>\n      // <div className=\"App\">\n      //   <ul>\n      //     <li>\n      //       <Link to=\"/\">Header</Link>\n      //     </li>\n      //     <li>\n      //       <Link to=\"/content\">Content</Link>\n      //     </li>\n      //     <li>\n      //       <Link to=\"/header\">Header</Link>\n      //     </li>\n      //     <li>\n      //       <Link to=\"/content\">Content</Link>\n      //     </li>\n      //   </ul>\n      //   <br/><br/><br/><br></br>\n      //   <hr />\n      //   <Route exact path=\"/\" component={Header} />\n      //   <Route exact path=\"/content\" component={Content} />\n      //   <Route path=\"/header\" component={Header} />\n      // </div>\n      // </BrowserRouter>\n      //react-css-transition-group\n      // <div>\n      //       <ReactCSSTransitionGroup transitionName = \"example\"\n      //          transitionAppear = {true} transitionAppearTimeout = {500}\n      //          transitionEnter = {false} transitionLeave = {false}>\n      //          <h1>My Element...</h1>\n      //       </ReactCSSTransitionGroup>\n      //    </div>  \n      //GAME\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.onChangeValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.renderSquare.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        id: \"row0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        id: \"cell0-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, this.state.data[0]), React.createElement(\"td\", {\n        id: \"cell0-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, this.state.data[1]), React.createElement(\"td\", {\n        id: \"cell0-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, this.state.data[2])), React.createElement(\"tr\", {\n        id: \"row1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        id: \"cell1-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"td\", {\n        id: \"cell1-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, \"4\"), React.createElement(\"td\", {\n        id: \"cell1-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }, \"6\")), React.createElement(\"tr\", {\n        id: \"row2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        id: \"cell2-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, \"7\"), React.createElement(\"td\", {\n        id: \"cell2-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, \"8\"), React.createElement(\"td\", {\n        id: \"cell2-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, \"9\"))))))\n    );\n  }\n\n} // class Header extends React.Component {\n//   render() {\n//      return (\n//         <div>\n//            <h1>Header</h1>\n//         </div>\n//      );\n//   }\n// }\n// class Content extends React.Component {\n//   render() {\n//      return (\n//         <div>\n//            <h2>Content</h2>\n//            <p>The content text!!!</p>\n//         </div>\n//      );\n//   }\n// }\n// class TableRow extends React.Component {\n//   render() {\n//     return (\n//       <tr>\n//         <td>{this.props.data.id}</td>\n//         <td>{this.props.data.name}</td>\n//         <td>{this.props.data.age}</td>\n//       </tr>\n//     );\n//   }\n// }\n// App.defaultProps = {\n//   headerProp: 'abcd',\n//   contentProp: 'CID'\n// }\n// App.propTypes = {\n//   propArray: PropTypes.array.isRequired,\n//   propBool: PropTypes.bool.isRequired,\n//   propFunc: PropTypes.func,\n//   propNumber: PropTypes.number,\n//   propString: PropTypes.string,\n//   propObject: PropTypes.object\n// }\n// App.defaultProps = {\n//   propArray: [1, 2, 3, 4, 5],\n//   propBool: true,\n//   propFunc: function (e) { return e },\n//   propNumber: 1,\n//   propString: \"String value...\",\n//   propObject: {\n//     objectName1: \"objectValue1\",\n//     objectName2: \"objectValue2\",\n//     objectName3: \"objectValue3\"\n//   }\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/home/sarika/Downloads/src (1)/src/App.js"],"names":["React","ReactDOM","App","Component","constructor","renderSquare","value","setState","console","log","state","i","data","onChangeValue","e","target","bind","render"],"mappings":"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","sourcesContent":["// import Header from '../src/Header';\n// import Content from '../src/Content';\n// import Slider from 'rc-slider';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import { Route } from 'react-router';\n// import { Route,  BrowserRouter as Router } from 'react-router-dom';\n// import { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\n\n\n\n// var ReactCSSTransitionGroup = require('react-addons-css-transition-group');\n\n\n\n\n// import './App.css';\n// import 'rc-slider/assets/index.css';\n\n\n// const Range = Slider.Range;\n\n// const style = { width: 400, margin: 50 };\n\n\n\n// function App() {\n// var i = 1;\n\n// var myStyle = {\n//   fontSize: 100,\n//   color: '#FF0000',\n\n// }\n\n\n\n\nclass App extends React.Component {\nconstructor(){\n  super();\n  this.state = {\n    data:[],\n      value: ''\n     \n  }   \n   this.onChangeValue = this.onChangeValue.bind(this);\n\n}\n\n\n\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     data:\n  //       [\n  //         {\n  //           \"id\": 1,\n  //           \"name\": \"Foo\",\n  //           \"age\": \"20\"\n  //         },\n  //         {\n  //           \"id\": 2,\n  //           \"name\": \"Bar\",\n  //           \"age\": \"30\"\n  //         },\n  //         {\n  //           \"id\": 3,\n  //           \"name\": \"Baz\",\n  //           \"age\": \"40\"\n  //         }\n  //       ]\n  //   }\n  // }\n\n  // constructor(props) {\n  //   super(props);\n\n  //   this.state = {\n  //     header: \"Header from state...\",\n  //     content: \"Content from state...\"\n  //   }\n  // }\n\n  // constructor() {\n  //   super();\n\n  //   this.state = {\n  //     data: []\n  //   }\n\n  //   this.setStateHandler = this.setStateHandler.bind(this);\n  // };\n  // setStateHandler() {\n  //   var item = \"setState...\"\n  //   var myArray = this.state.data.slice();\n  //   myArray.push(item);\n  //   this.setState({ data: myArray })\n  // }\n\n  // constructor() {\n  //   super();\n  //   this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\n  // };\n  // forceUpdateHandler() {\n  //   this.forceUpdate();\n  // };\n\n  // constructor() {\n  //   super();\n  //   this.findDomNodeHandler = this.findDomNodeHandler.bind(this);\n  // };\n  // findDomNodeHandler() {\n  //   var myDiv = document.getElementById('myDiv');\n  //   ReactDOM.findDOMNode(myDiv).style.color = 'green';\n  // }\n\n\n  //   constructor(props) {\n  //     super(props);\n\n  //     this.state = {\n  //        data: 0\n  //     }\n  //     this.setNewNumber = this.setNewNumber.bind(this)\n  //     this.setNewNumber1= this.setNewNumber1.bind(this)\n  //  };\n  //  setNewNumber() {\n  //     this.setState({data: this.state.data + 1})\n  //  }\n\n  // setNewNumber1(){\n  //   this.setState({data : this.state.data - 1})\n  // }\n\n\n  // constructor(props) {\n  //   super(props);\n\n  //   this.state = {\n  //     data: 'Initial data...'\n  //   }\n  //   this.updateState = this.updateState.bind(this);\n  // };\n  // updateState(e) {\n  //   this.setState({ data: e.target.value });\n  // }\n\n  //   constructor(props) {\n  //     super(props);\n\n  //     this.state = {\n  //        data: 'Initial data...'\n  //     }\n  //     this.updateState = this.updateState.bind(this);\n  //  };\n  //  updateState(e) {\n  //     this.setState({data: e.target.value});\n  //   }\n\n  // constructor(props) {\n  //   super(props);\n\n  //   this.state = {\n  //     data: 'Initial data...'\n  //   }\n  //   this.updateState = this.updateState.bind(this);\n  // };\n  // updateState() {\n  //   this.setState({ data: 'Data updated...' })\n  // }\n\n  // constructor(props) {\n  //   super(props);\n\n  //   this.state = {\n  //     data: 'Initial data...'\n  //   }\n  //   this.updateState = this.updateState.bind(this);\n  // };\n  // updateState() {\n  //   this.setState({ data: 'Data updated from the child component...' })\n  // }\n\n\n  // constructor(props) {\n  //   super(props);\n\n  //   this.state = {\n  //     data: 'Initial data...'\n  //   }\n  //   this.updateState = this.updateState.bind(this);\n  // };\n  // updateState() {\n  //   this.setState({ data: 'Data updated...' })\n  // }\n\n\n  // constructor(props) {\n  //   super(props);\n\n  //   this.state = {\n  //     data: 'Initial data...'\n  //   }\n  //   this.updateState = this.updateState.bind(this);\n  // };\n  // updateState() {\n  //   this.setState({ data: 'Data updated from the child component...' })\n  // }\n\n\n\n  //   constructor(props) {\n  //     super(props);\n\n  //     this.state = {\n  //        data: ''\n  //     }\n  //     this.updateState = this.updateState.bind(this);\n  //     this.clearInput = this.clearInput.bind(this);\n  //  };\n  //  updateState(e) {\n  //     this.setState({data: e.target.value});\n  //  }\n  //  clearInput() {\n  //     this.setState({data: ''});\n  //     ReactDOM.findDOMNode(this.refs.myInput).focus();\n  //  }\n\n  // constructor() {\n  //   super();\n\n  //   this.state = {\n  //      data:[\n  //         {\n  //            component: 'First...',\n  //            id: 1\n  //         },\n  //         {\n  //            component: 'Second...',\n  //            id: 2\n  //         },\n  //         {\n  //            component: 'Third...',\n  //            id: 3\n  //         }\n  //      ]\n  //   }\n  // }\n\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     lowerBound: 20,\n  //     upperBound: 40,\n  //     value: [20, 40],\n  //   };\n  // }\n\n  // onLowerBoundChange = (e) => {\n  //   this.setState({ lowerBound: +e.target.value });\n  // }\n  // onUpperBoundChange = (e) => {\n  //   this.setState({ upperBound: +e.target.value });\n  // }\n  // onSliderChange = (value) => {\n  //   console.log(value);\n  //   this.setState({\n  //     value,\n  //   });\n  // }\n  // handleApply = () => {\n  //   const { lowerBound, upperBound } = this.state;\n  //   this.setState({ value: [lowerBound, upperBound] });\n  // }\n\n  renderSquare = (value) => {\n  // this.state.data =this.state.value;\n  this.setState({value:value});\n\n    console.log(\"value\",this.state.value);\n    for (var i = 0; i < 9; i++) {\n\n       this.setState({data:this.state.value});\n    }    \n   \n    console.log(\"data\",this.state.data);\n    // return <square value={i} />;\n    \n  }\n\n  onChangeValue = (e) => {\n    this.setState({value : e.target.value});\n    // this.setState({data: e.target.value});\n  }\n\n \n\n\n\n  render() {\n    console.log(\"data\",this.state.data);\n    return(\n      // <div className=\"App\">\n      //   <header className=\"App-header\">\n      //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      //     <p>\n      //       Edit <code>src/App.js</code> and save to reload.\n      //     </p>\n      //     <a\n      //       className=\"App-link\"\n      //       href=\"https://reactjs.org\"\n      //       target=\"_blank\"\n      //       rel=\"noopener noreferrer\"\n      //     >\n      //       Learn React\n      //     </a>\n      //   </header>\n      // </div>\n\n      //     <div>\n      //     Hello World!!!\n      //  </div>\n\n      // <div>\n      //   <h1>Header</h1>\n      //   <h2>Content</h2>\n      //   <p>This is the content!!!</p>\n      // </div>\n\n      // <div>\n      //   <h1>Header</h1>\n      //   <h2>Content</h2>\n      //   <p data-myattribute=\"somevalue\">This is the content!!!</p>\n      // </div>\n\n      // <div>\n      //   <h1>{1 + 1}</h1>\n      // </div>\n\n      //     <div>\n      //     <h1>{i == 4 ? 'True!' : 'False'}</h1>\n      //  </div>\n\n      // <div>\n      //   <h1 style={myStyle}>Header</h1>\n      // </div>\n      //   <div>\n      //           <h1>Header</h1>\n      //    {/* {//end of command}       */}\n      // </div>\n\n      //   <div>\n      //   <Header/>\n      //   <Content/>\n      // </div>\n\n      //     <div>\n      //     <Header/>\n      //     <table>\n      //        <tbody>\n      //           {this.state.data.map((person, i) => <TableRow key = {i} \n      //              data = {person} />)}\n      //        </tbody>\n      //     </table>\n      //  </div>\n\n      // {/* <div>\n      // <h1>{this.state.header}</h1>\n      // <h2>{this.state.content}</h2>\n      // </div> */}\n      // {/* <div>\n      //             <h1>{this.props.headerProp}</h1>\n      //             <h2>{this.props.contentProp}</h2>\n      //          </div> */}\n\n      // <div>\n      //   <Header headerProp={this.state.header} />\n      //   <Content contentProp={this.state.content} />\n      // </div>\n\n\n      // <div>\n      //       <h3>Array: {this.props.propArray}</h3>\n      //       <h3>Bool: {this.props.propBool ? \"True...\" : \"False...\"}</h3>\n      //       <h3>Func: {this.props.propFunc(3)}</h3>\n      //       <h3>Number: {this.props.propNumber}</h3>\n      //       <h3>String: {this.props.propString}</h3>\n      //       <h3>Object: {this.props.propObject.objectName1}</h3>\n      //       <h3>Object: {this.props.propObject.objectName2}</h3>\n      //       <h3>Object: {this.props.propObject.objectName3}</h3>\n      //    </div>\n\n      // <div>\n      //   <button onClick={this.setStateHandler}>SET STATE</button>\n      //   <h4>State Array: {this.state.data}</h4>\n      // </div>\n\n      // <div>\n      //   <button onClick={this.forceUpdateHandler}>FORCE UPDATE</button>\n      //   <h4>Random number: {Math.random()}</h4>\n      // </div>\n\n      // <div>\n      //   <button onClick={this.findDomNodeHandler}>FIND DOME NODE</button>\n      //   <div id=\"myDiv\">NODE</div>\n      // </div>\n\n      //     <div>\n      //     <button onClick = {this.setNewNumber}>INCREMENT</button>\n      //     <Content myNumber = {this.state.data}></Content>\n      //     <button onClick ={this.setNewNumber1}>DECRMENT</button>\n      //     <Header myNumber1 ={this.state.data}></Header>\n      //  </div>\n\n      // <div>\n      //   <input type=\"text\" value={this.state.data}\n      //     onChange={this.updateState} style={{margin:'10px 0px 0px 10px'}}/>\n      //   <h4 style={{color:'red',margin:'10px 0px 0px 10px'}}>{this.state.data}</h4>\n      // </div>\n\n      // <div>\n      //       <Content myDataProp = {this.state.data} \n      //          updateStateProp = {this.updateState}></Content>\n      //    </div>\n\n      // <div>\n      //   <button onClick={this.updateState}>CLICK</button>\n      //   <h4>{this.state.data}</h4>\n      // </div>\n\n      // <div>\n      //   <Content myDataProp={this.state.data}\n      //     updateStateProp={this.updateState}></Content>\n      // </div>\n\n      // <div>\n      //   <button onClick={this.updateState}>CLICK</button>\n      //   <h4>{this.state.data}</h4>\n      // </div>\n\n      // <div>\n      //   <Content myDataProp={this.state.data}\n      //     updateStateProp={this.updateState}></Content>\n      // </div>\n\n\n      // <div>\n      //       <input value = {this.state.data} onChange = {this.updateState} \n      //          ref = \"myInput\"></input>\n      //       <button onClick = {this.clearInput}>CLEAR</button>\n      //       <h4>{this.state.data}</h4>\n      //    </div>\n\n\n      //     <div>\n      //     <div>\n      //        {this.state.data.map((dynamicComponent, i) => <Content \n      //           key = {i} componentData = {dynamicComponent}/>)}\n      //     </div>\n      //  </div>\n\n      // <div>\n      //   <label>LowerBound: </label>\n      //   <input type=\"number\" value={this.state.lowerBound} onChange={this.onLowerBoundChange} />\n      //   <br />\n      //   <label>UpperBound: </label>\n      //   <input type=\"number\" value={this.state.upperBound} onChange={this.onUpperBoundChange} />\n      //   <br />\n      //   <button onClick={this.handleApply}>Apply</button>\n      //   <br /><br />\n      //   <Range allowCross={false} value={this.state.value} onChange={this.onSliderChange} />\n      // </div>\n\n         \n\n\n      //Routing\n      // <BrowserRouter>\n      // <div className=\"App\">\n      //   <ul>\n      //     <li>\n      //       <Link to=\"/\">Header</Link>\n      //     </li>\n      //     <li>\n      //       <Link to=\"/content\">Content</Link>\n      //     </li>\n      //     <li>\n      //       <Link to=\"/header\">Header</Link>\n      //     </li>\n      //     <li>\n      //       <Link to=\"/content\">Content</Link>\n      //     </li>\n      //   </ul>\n      //   <br/><br/><br/><br></br>\n      //   <hr />\n      //   <Route exact path=\"/\" component={Header} />\n      //   <Route exact path=\"/content\" component={Content} />\n      //   <Route path=\"/header\" component={Header} />\n      \n      // </div>\n      // </BrowserRouter>\n   \n\n      //react-css-transition-group\n      // <div>\n      //       <ReactCSSTransitionGroup transitionName = \"example\"\n      //          transitionAppear = {true} transitionAppearTimeout = {500}\n      //          transitionEnter = {false} transitionLeave = {false}>\n\t\t\t\t\t\n      //          <h1>My Element...</h1>\n      //       </ReactCSSTransitionGroup>\n      //    </div>  \n\n\n      //GAME\n      <div>\n        {/* <button className=\"square\"></button> */}\n        <input type=\"text\" value={this.state.value} onChange={this.onChangeValue}/>\n        <button  onClick={this.renderSquare.bind(this)}>Submit</button>\n       \n       <div>\n       <table id=\"square\">\n        <tbody>\n          <tr id=\"row0\">\n            <td id=\"cell0-0\">{this.state.data[0]}</td>\n            <td id=\"cell0-1\">{this.state.data[1]}</td>\n            <td id=\"cell0-2\">{this.state.data[2]}</td>\n          </tr>\n          <tr id=\"row1\">\n            <td id=\"cell1-0\">2</td>\n            <td id=\"cell1-1\">4</td>\n            <td id=\"cell1-2\">6</td>\n          </tr>\n          <tr id=\"row2\">\n            <td id=\"cell2-0\">7</td>\n            <td id=\"cell2-1\">8</td>\n            <td id=\"cell2-2\">9</td>\n          </tr>\n        </tbody>\n      </table>\n       </div>\n      </div>\n    \n    );\n    \n  }\n}\n\n\n\n// class Header extends React.Component {\n//   render() {\n//      return (\n//         <div>\n//            <h1>Header</h1>\n//         </div>\n//      );\n//   }\n// }\n// class Content extends React.Component {\n//   render() {\n//      return (\n//         <div>\n//            <h2>Content</h2>\n//            <p>The content text!!!</p>\n//         </div>\n//      );\n//   }\n// }\n\n\n\n\n// class TableRow extends React.Component {\n//   render() {\n//     return (\n//       <tr>\n//         <td>{this.props.data.id}</td>\n//         <td>{this.props.data.name}</td>\n//         <td>{this.props.data.age}</td>\n//       </tr>\n//     );\n//   }\n// }\n\n// App.defaultProps = {\n//   headerProp: 'abcd',\n//   contentProp: 'CID'\n// }\n\n\n// App.propTypes = {\n//   propArray: PropTypes.array.isRequired,\n//   propBool: PropTypes.bool.isRequired,\n//   propFunc: PropTypes.func,\n//   propNumber: PropTypes.number,\n//   propString: PropTypes.string,\n//   propObject: PropTypes.object\n// }\n\n// App.defaultProps = {\n//   propArray: [1, 2, 3, 4, 5],\n//   propBool: true,\n//   propFunc: function (e) { return e },\n//   propNumber: 1,\n//   propString: \"String value...\",\n\n//   propObject: {\n//     objectName1: \"objectValue1\",\n//     objectName2: \"objectValue2\",\n//     objectName3: \"objectValue3\"\n//   }\n// }\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}